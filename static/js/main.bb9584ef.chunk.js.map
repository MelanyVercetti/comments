{"version":3,"sources":["AddComment/AddComment.js","Comment/Comment.js","App.js","index.js"],"names":["AddCommentForm","props","className","type","onChange","onNameChange","rows","cols","onCommentChange","onClick","onBtnClick","Comment","name","comment","date","onDeleteClick","id","App","localStorageComments","JSON","parse","localStorage","getItem","console","log","useState","comments","setComments","newComment","newUserName","deleteComment","commentsCopy","index","findIndex","t","splice","setItem","stringify","event","target","value","latestComment","Date","toLocaleString","nanoid","push","document","querySelector","map","el","ReactDOM","render","StrictMode","getElementById"],"mappings":"oQAkBeA,G,YAfQ,SAAAC,GACnB,OACI,sBAAKC,UAAU,eAAf,UACI,wBAAOA,UAAU,gBAAjB,oCACI,uBAAOA,UAAU,wBAAwBC,KAAK,OAAOC,SAAUH,EAAMI,kBAEzE,wBAAOH,UAAU,cAAjB,oFACI,0BAAUA,UAAU,sBAAsBI,KAAK,IAAIC,KAAK,KAAKH,SAAUH,EAAMO,qBAEjF,wBAAQN,UAAU,cAAcO,QAASR,EAAMS,WAA/C,8BCQGC,G,MAjBC,SAAAV,GACZ,OACI,qBAAmBC,UAAU,eAA7B,UACI,sBAAKA,UAAU,YAAf,UAA4BD,EAAMW,KAAlC,IAAwC,sBAAMV,UAAU,UAAhB,SAA2BD,EAAMY,UACrE,qBAAKX,UAAU,OAAf,SAAuBD,EAAMa,UAGjC,wBAAuBZ,UAAU,iBAAiBO,QAC9C,WACIR,EAAMc,cAAcd,EAAMe,KAFlC,2BAAaf,EAAMe,MALdf,EAAMe,M,OC4FRC,MA1Ff,WACI,IAqBIC,EAAuBC,KAAKC,MAAMC,aAAaC,QAAS,gBAC5DC,QAAQC,IAAIN,GAvBD,MAwBqBO,mBAASP,GAvBjB,CACpB,CACIN,KAAM,YACNC,QAAS,gMACTC,KAAM,uBACNE,GAAI,QAER,CACIJ,KAAM,iBACNC,QAAS,oFACTC,KAAM,uBACNE,GAAI,QAER,CACIJ,KAAM,qBACNC,QAAS,gMACTC,KAAM,uBACNE,GAAI,UAlBD,mBAwBJU,EAxBI,KAwBMC,EAxBN,KA0BPC,EAAa,GACbC,EAAc,GAwBZC,EAAgB,SAACd,GACnB,IAAMe,EAAY,YAAOL,GACnBM,EAAQD,EAAaE,WAAU,SAAAC,GAAC,OAAIA,EAAElB,KAAOA,KACnDe,EAAaI,OAAOH,EAAO,GAC3BL,EAAYI,GACZV,aAAae,QAAQ,cAAejB,KAAKkB,UAAUN,KAoBvD,OACI,sBAAK7B,UAAU,MAAf,UACI,cAAC,EAAD,CACIG,aAlDO,SAACiC,GAChBT,EAAcS,EAAMC,OAAOC,OAkDnBhC,gBA/CU,SAAC8B,GACnBV,EAAaU,EAAMC,OAAOC,OA+ClB9B,WAzCU,WAClB,IAAMqB,EAAY,YAAOL,GACnBe,EAAgB,CAAC7B,KAAMiB,EAAahB,QAASe,EAAYd,MAJ7C,IAAI4B,MAAOC,iBAImD3B,GAAI4B,YAAO,IAC3Fb,EAAac,KAAKJ,GAClBd,EAAYI,GAEZV,aAAae,QAAQ,cAAejB,KAAKkB,UAAUN,IACnDe,SAASC,cAAc,0BAA0BP,MAAQ,GACzDM,SAASC,cAAc,wBAAwBP,MAAQ,MAkCnD,6BAtBS,YAAOd,GACAsB,KAAI,SAACC,GACrB,OACI,cAAC,EAAD,CAEIjC,GAAIiC,EAAGjC,GACPJ,KAAMqC,EAAGrC,KACTE,KAAMmC,EAAGnC,KACTD,QAASoC,EAAGpC,QACZE,cAAee,GALVmB,EAAGjC,aClE5BkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,W","file":"static/js/main.bb9584ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AddComment.css';\r\n\r\nconst AddCommentForm = props => {\r\n    return (\r\n        <div className=\"comment_form\">\r\n            <label className=\"new_user_name\">Имя:&#160;\r\n                <input className=\"new_user_name_content\" type=\"text\" onChange={props.onNameChange}/>\r\n            </label>\r\n            <lable className=\"new_comment\">Комментарий:&#160;\r\n                <textarea className=\"new_comment_content\" rows=\"2\" cols=\"45\" onChange={props.onCommentChange}/>\r\n            </lable>\r\n            <button className=\"add_comment\" onClick={props.onBtnClick}>Add comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddCommentForm;","import React from 'react';\r\nimport './Comment.css';\r\n\r\nconst Comment = props => {\r\n    return (\r\n        <li key={props.id} className=\"comment_item\">\r\n            <div className=\"user_name\">{props.name} <span className=\"comment\">{props.comment}</span>\r\n                <div className=\"date\">{props.date}</div>\r\n            </div>\r\n\r\n            <button key={props.id} className=\"delete_comment\" onClick={\r\n                () => {\r\n                    props.onDeleteClick(props.id)\r\n                }\r\n            }>Delete comment\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React, {useState} from 'react';\nimport './App.css';\nimport AddComment from \"./AddComment/AddComment\";\nimport Comment from \"./Comment/Comment\";\nimport {nanoid} from 'nanoid';\n\n\nfunction App() {\n    const defaultComments = [\n        {\n            name: \"komarik08\",\n            comment: \"Привет! Есть вопрос по реакту. В личку.\",\n            date: \"10.01.2021, 15:56:17\",\n            id: \"i8tS\"\n        },\n        {\n            name: \"Hyakkimaru2007\",\n            comment: \"Ответил в личку.\",\n            date: \"10.01.2021, 17:28:36\",\n            id: \"ie56\"\n        },\n        {\n            name: \"malvinka-polovinka\",\n            comment: \"Кто сталкивался Each child in an array or iterator should have a unique “key” prop. Хелп!\",\n            date: \"10.01.2021, 20:02:34\",\n            id: \"ury6\"\n        },\n    ]\n\n    let localStorageComments = JSON.parse(localStorage.getItem((\"commentsArr\")));\n    console.log(localStorageComments)\n    const [comments, setComments] = useState(localStorageComments ? localStorageComments : defaultComments);\n\n    let newComment = '';\n    let newUserName = '';\n\n    const getNewName = (event) => {\n        newUserName = event.target.value;\n            };\n\n    const getNewComment = (event) => {\n        newComment = event.target.value;\n\n    };\n\n    const setDate = () => new Date().toLocaleString();\n\n    const addNewComment = () => {\n        const commentsCopy = [...comments];\n        const latestComment = {name: newUserName, comment: newComment, date: setDate(), id: nanoid(4)};\n        commentsCopy.push(latestComment);\n        setComments(commentsCopy);\n\n        localStorage.setItem(\"commentsArr\", JSON.stringify(commentsCopy));\n        document.querySelector('.new_user_name_content').value = '';\n        document.querySelector('.new_comment_content').value = '';\n    };\n\n    const deleteComment = (id) => {\n        const commentsCopy = [...comments];\n        const index = commentsCopy.findIndex(t => t.id === id);\n        commentsCopy.splice(index, 1);\n        setComments(commentsCopy);\n        localStorage.setItem(\"commentsArr\", JSON.stringify(commentsCopy));\n    };\n\n    const setEntireList = () => {\n        let stateList = [...comments];\n        let res = stateList.map((el) => {\n            return (\n                <Comment\n                    key={el.id}\n                    id={el.id}\n                    name={el.name}\n                    date={el.date}\n                    comment={el.comment}\n                    onDeleteClick={deleteComment}/>\n            )\n        })\n        return res;\n    };\n\n\n    return (\n        <div className=\"App\">\n            <AddComment\n                onNameChange={getNewName}\n                onCommentChange={getNewComment}\n                onBtnClick={addNewComment}/>\n            <ul>\n                {setEntireList()}\n            </ul>\n        </div>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}